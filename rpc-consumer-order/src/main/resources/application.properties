server.port=10092
spring.application.name=rpc-consumer-order

dubbo.application.name=rpc-comsumer-order
dubbo.registry.address=nacos://127.0.0.1:8848?username=nacos&password=nacos
dubbo.application.register-consumer=true

#rabbitmq
spring.rabbitmq.virtual-host=/
spring.rabbitmq.addresses=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

spring.rabbitmq.listener.simple.concurrency=5
spring.rabbitmq.listener.simple.max-concurrency=15
spring.rabbitmq.listener.simple.prefetch=10

mq.env=test
mq.kill.success.email.queue=${mq.env}.kill.success.email.queue
mq.kill.success.email.exchange=${mq.env}.kill.success.email.exchange
mq.kill.success.email.routing.key=${mq.env}.kill.success.email.routing.key

mq.kill.success.dead.queue=${mq.env}.kill.success.dead.queue
mq.kill.success.dead.exchange=${mq.env}.kill.success.dead.exchange
mq.kill.success.dead.routing.key=${mq.env}.kill.success.dead.routing.key

mq.kill.success.real.queue=${mq.env}.kill.success.real.queue
mq.kill.success.real.exchange=${mq.env}.kill.success.real.exchange
mq.kill.success.real.routing.key=${mq.env}.kill.success.real.routing.key

mq.kill.success.expire=20000

#rabbitmq削峰
mq.execute.limit.queue.name=${mq.env}.execute.limit.queue
mq.execute.limit.queue.exchange=${mq.env}.execute.limit.exchange
mq.execute.limit.queue.routing.key=${mq.env}.execute.limit.routing.key


#mail
spring.mail.host=smtp.qq.com
spring.mail.username=
spring.mail.password=
# 设置是否需要认证，如果为true,那么用户名和密码就必须的，
# 如果设置false，可以不设置用户名和密码，当然也得看你的对接的平台是否支持无密码进行访问的。
spring.mail.properties.mail.smtp.auth=true

# STARTTLS[1]  是对纯文本通信协议的扩展。它提供一种方式将纯文本连接升级为加密连接（TLS或SSL），而不是另外使用一个端口作加密通信。
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

mail.send.from=${spring.mail.username}

#Redis
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=
redis.config.host=redis://127.0.0.1:6379

#zookeeper
zk.host=127.0.0.1:2181
zk.namespace=skill